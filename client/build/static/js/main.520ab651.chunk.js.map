{"version":3,"sources":["components/Log/SignIn.js","components/Log/SignUp.js","components/Log/index.js","Pages/Home.js","actions/post.action.js","components/outils.js","components/Post/EditDeleteComment.js","components/Post/CardComment.js","components/Post/DeletePost.js","components/Post/CardAllPosts.js","components/Post/AllPosts.js","components/Post/NewPostForm.js","Pages/Post.js","actions/user.action.js","components/Profile/UpdateImg.js","components/Profile/ProfileUser.js","Pages/Profile.js","components/Footer.js","components/Log/Logout.js","components/Navbar.js","components/Routes/index.js","components/AppContext.js","App.js","reducers/user.reducer.js","reducers/post.reducer.js","actions/users.action.js","reducers/users.reducer.js","reducers/index.js","index.js"],"names":["SignIn","useState","email","setEmail","password","setPassword","id","action","onSubmit","e","preventDefault","axios","method","url","process","data","then","res","errors","console","log","window","localStorage","setItem","userId","token","location","catch","err","className","htmlFor","type","name","placeholder","value","onChange","target","SignUp","formSubmit","setFormSubmit","setName","Controlpassword","setControlPassword","handleRegister","a","confirmPasswordError","document","querySelector","innerHTML","username","response","error","param","msg","Log","props","signup","signUpModal","setSignUpModal","signin","signInModal","setSignInModal","handleModals","onClick","Home","src","alt","GET_ALL_POSTS","UPDATE_POST","DELETE_POST","UPDATE_IMG_POST","EDIT_COMMENT","DELETE_COMMENT","getAllPosts","num","dispatch","get","array","posts","slice","payload","addPost","uid","getItem","headers","isEmpty","undefined","Object","keys","length","trim","dateParser","timestamp","Date","parse","toLocaleDateString","hour","minute","year","month","day","toString","EditDeleteComment","comment","postId","isAuthor","setIsAuthor","edit","setEdit","text","setText","useDispatch","userData","useSelector","state","userReducer","useEffect","createdAt","commentId","deleteComment","editComment","defaultValue","CardComment","post","usersData","usersReducer","Comments","map","user","imageUrlUser","join","User","userComment","addComment","DeleteCard","deleteQuote","confirm","CardAllPosts","isLoading","setIsLoading","updateAllPost","setUpdateAllPost","textUpdate","setTextUdpate","showComment","setShowComment","image","setImage","form","setForm","FormData","append","updateImgPost","accept","files","titre","message","imageUrlPost","video","width","height","frameBorder","allow","allowFullScreen","title","AllPosts","count","setCount","loadPost","setLoadPost","postReducer","loadMore","innerHeight","documentElement","scrollTop","scrollingElement","scrollHeight","addEventListener","removeEventListener","NewPostForm","setMessage","postImg","setPostImg","setVideo","newPost","setNewPost","findLink","split","i","includes","embed","replace","splice","handleVideo","handleNewPost","cancelPost","alert","exact","to","URL","createObjectURL","handlePicture","Post","GET_USER","UPDATE_PROFIL","UPDATE_IMG","DELETE_ACCOUNT","UpdateImg","updateImg","ProfileUser","description","setDescription","confirmDelete","setConfirmDelete","updateProfil","clear","href","deleteAccount","Profile","Footer","Logout","removeItem","Navbar","index","path","component","UidContext","createContext","App","setUid","fetchToken","getUser","Provider","Routes","initialState","GET_USERS","combineReducers","filter","comments","rootNode","getElementById","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","thunk","logger","users","ReactDOM","render"],"mappings":"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","file":"static/js/main.520ab651.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\n// !!!revoir les erreurs+ fonction voir mot de passe\r\n\r\n\r\nconst SignIn = () => {\r\n\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n    const handleSignIn = (e) => {\r\n        e.preventDefault();\r\n        // const emailErreur = document.querySelector(\".email\");\r\n        // const passwordErreur = document.getElementsByClassName(\"password\");\r\n\r\n        axios({\r\n            method: \"post\",\r\n            url: `${process.env.REACT_APP_API_URL}api/auth/login`,\r\n            data: {\r\n                email,\r\n                password\r\n            }\r\n        })\r\n            .then((res) => {\r\n                if (res.data.errors) {\r\n                    console.log(res.data);\r\n                    // emailErreur.innerHTML = res.data.error.email;\r\n                    // passwordErreur.innerHTML = res.data.error.password;\r\n                } else {\r\n                    window.localStorage.setItem('id', res.data.userId);\r\n                    window.localStorage.setItem('token', res.data.token);\r\n                    window.location = \"/post\";\r\n                }\r\n            })\r\n            .catch((err) => console.log(err));\r\n    };\r\n\r\n\r\n    return (\r\n        <div id=\"login\">\r\n            <form action=\"#\" onSubmit={handleSignIn} >\r\n                <h2>Identifiez-vous</h2>\r\n                <div className=\"login-borderBottom\"></div>\r\n                <label htmlFor=\"email\"></label>\r\n                <input id=\"email\" type=\"email\" name=\"email\" placeholder=\"Adresse e-mail\"\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                />\r\n                <div className=\"error\"></div>\r\n                <br />\r\n                <label htmlFor=\"password\"></label>\r\n                <input id=\"password\" className=\"input\" type=\"password\" name=\"password\" placeholder=\"Mot de passe\"\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                />\r\n                <div className=\"error\"></div>\r\n                <input id=\"login\" type=\"submit\" value=\"Connexion\" className=\"button green-button\" />\r\n            </form>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default SignIn;\r\n\r\n","import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport SignIn from './SignIn';\r\n\r\n// !!!revoir if else ligne37 + fonction voir mot de passe\r\n\r\nconst SignUp = () => {\r\n  const [formSubmit, setFormSubmit] = useState(false);\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [Controlpassword, setControlPassword] = useState('');\r\n\r\n  const handleRegister = async (e) => {\r\n    e.preventDefault();\r\n    // const nomErreur = document.querySelector('.nom.erreur');\r\n    // const emailErreur = document.querySelector('.email.erreur');\r\n    // const passwordErreur = document.querySelector('.password.erreur');\r\n    const confirmPasswordError = document.querySelector('.confirmPassword');\r\n\r\n    confirmPasswordError.innerHTML = \" \";\r\n\r\n    if (password !== Controlpassword) {\r\n      confirmPasswordError.innerHTML = \"Les mots de passes ne correspondent pas\";\r\n    } else {\r\n      axios({\r\n        method: \"post\",\r\n        url: `${process.env.REACT_APP_API_URL}api/auth/signup`,\r\n        data: {\r\n          username: name,\r\n          email,\r\n          password\r\n        }\r\n      })\r\n        .then((res) => {\r\n\r\n          if (res.data.errors) {\r\n            // nomErreur.innerHTML = res.data.errors.username;\r\n            // emailErreur.innerHTML = res.data.errors.email;\r\n            // passwordErreur.innerHTML = res.data.errors.password;\r\n          } else {\r\n            setFormSubmit(true);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          for (let error of err.response.data.errors) {\r\n            document.querySelector(`.error.${error.param}`).innerHTML = error.msg;\r\n          }\r\n          console.log(err.response.data);\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div id=\"login registration\">\r\n      {formSubmit ? (\r\n        <>\r\n          <SignIn />\r\n          <h4>\r\n            Enregistrement réussi !\r\n            <br />Veuillez vous connecté\r\n          </h4>\r\n        </>\r\n      ) : (\r\n        <form onSubmit={handleRegister} action=\"\">\r\n          <h2>Inscription</h2>\r\n          <div className=\"login-borderBottom\"></div>\r\n          <label htmlFor=\"username\"></label>\r\n          <input id=\"username\" type=\"text\" name=\"username\" placeholder=\"Nom\"\r\n            onChange={(e) => setName(e.target.value)}\r\n            value={name}\r\n          />\r\n          <br />\r\n          <label htmlFor=\"email\"></label>\r\n          <input id=\"email\" type=\"email\" name=\"email\" placeholder=\"Adresse e-mail\"\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            value={email}\r\n          />\r\n          <br />\r\n          <label htmlFor=\"password\"></label>\r\n          <input id=\"password\" type=\"password\" name=\"password\" placeholder=\"Mot de passe\"\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            value={password}\r\n          />\r\n          <div className=\"error\"></div>\r\n          <br />\r\n          <label htmlFor=\"password\"></label>\r\n          <input type=\"password\" name=\"password\" className=\"confirmPassword\" placeholder=\"Confirmer mot de passe\"\r\n            onChange={(e) => setControlPassword(e.target.value)}\r\n            value={Controlpassword}\r\n          />\r\n          <div className=\"error\"></div>\r\n          <input type=\"submit\" value=\"S'inscrire\" className=\"button green-button\" />\r\n        </form>\r\n      )}\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default SignUp;\r\n","import React, { useState } from 'react';\r\nimport SignIn from './SignIn';\r\nimport SignUp from './SignUp';\r\n\r\n\r\n\r\nconst Log = (props) => {\r\n    const [signUpModal, setSignUpModal] = useState(props.signup);\r\n    const [signInModal, setSignInModal] = useState(props.signin);\r\n\r\n    const handleModals = (e) => {\r\n        if (e.target.id === \"signup\") {\r\n            setSignInModal(false);\r\n            setSignUpModal(true);\r\n        } else if (e.target.id === \"signin\") {\r\n            setSignUpModal(false);\r\n            setSignInModal(true);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div id=\"form-container\">\r\n            <div className=\"form-home-link\">\r\n                <p id=\"signin\" className=\"link\"\r\n                    onClick={handleModals} >\r\n                    S'identifier\r\n                </p>\r\n                <p id=\"signup\" className=\"link\"\r\n                    onClick={handleModals} >\r\n                    Créer un compte\r\n                </p>\r\n            </div>\r\n            {signInModal && <SignIn />}\r\n            {signUpModal && <SignUp />}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Log;\r\n","import React from \"react\";\r\nimport Log from '../components/Log'\r\n\r\n\r\n\r\n\r\nconst Home = () => {\r\n  return (\r\n    <>\r\n      <main id=\"main-log\">\r\n        <div id=\"log-presentation\">\r\n          <img src=\"logo/imgentreprise.jpg\" alt=\"bureau avec des ordinateurs\"></img>\r\n          <div className=\"log-box\"></div>\r\n          <h1>Bienvenue sur votre premier réseau social d'entreprise</h1>\r\n        </div>\r\n        <Log signin={true} signup={false} />\r\n      </main>\r\n\r\n    </>\r\n  )\r\n};\r\n\r\nexport default Home;\r\n","import axios from 'axios';\r\n\r\nexport const GET_ALL_POSTS = \"GET_ALL_POSTS\";\r\nexport const ADD_POST = \"ADD_POST\";\r\n\r\nexport const UPDATE_POST = \"UPDATE_POST\";\r\nexport const DELETE_POST = \"DELETE_POST\";\r\nexport const UPDATE_IMG_POST = \"UPDATE_IMG_POST\";\r\n\r\nexport const ADD_COMMENT = \"ADD_COMMENT\";\r\nexport const EDIT_COMMENT = \"EDIT_COMMENT\";\r\nexport const DELETE_COMMENT = \"DELETE_COMMENT\";\r\n\r\n\r\n\r\nexport const getAllPosts = (num) => {\r\n    return (dispatch) => {\r\n        return axios\r\n            .get(`${process.env.REACT_APP_API_URL}api/post/`)\r\n            .then((res) => {\r\n                const array = res.data.posts.slice(0, num);\r\n                // console.log(res.data.posts);\r\n                dispatch({ type: GET_ALL_POSTS, payload: array })\r\n            })\r\n            .catch((err) => console.log(err));\r\n    }\r\n}\r\n\r\nexport const addPost = (data, uid) => {\r\n    const token = localStorage.getItem('token');\r\n    return (dispatch) => {\r\n        return axios({\r\n            method: \"post\",\r\n            url: (`${process.env.REACT_APP_API_URL}api/post/${uid}`),\r\n            headers: {\r\n                'Authorization': `Bearer ${token}`\r\n            },\r\n            data: data\r\n        })\r\n    }\r\n}\r\n\r\nexport const updatePost = (postId, message) => {\r\n    return (dispatch) => {\r\n        return axios({\r\n            method: \"put\",\r\n            url: (`${process.env.REACT_APP_API_URL}api/post/${postId}`),\r\n            data: {\r\n                message,\r\n\r\n            }\r\n        })\r\n            .then((res) => {\r\n                dispatch({ type: UPDATE_POST, payload: { message, postId } })\r\n            })\r\n            .catch((err) => console.log(err));\r\n    };\r\n};\r\n\r\nexport const updateImgPost = (postId, image) => {\r\n    return (dispatch) => {\r\n        let data = new FormData();\r\n        data.append('image', image);\r\n\r\n        return axios({\r\n            method: \"put\",\r\n            url: `${process.env.REACT_APP_API_URL}api/post/${postId}/image`,\r\n            data: data\r\n        })\r\n            .then((res) => {\r\n                dispatch({ type: UPDATE_IMG_POST, payload: data });\r\n\r\n            })\r\n            .catch((err) => console.log(err));\r\n    };\r\n};\r\n\r\nexport const deletePost = (postId) => {\r\n    return (dispatch) => {\r\n        return axios({\r\n            method: \"delete\",\r\n            url: `${process.env.REACT_APP_API_URL}api/post/${postId}`,\r\n        })\r\n            .then((res) => {\r\n                dispatch({ type: DELETE_POST, payload: { postId } })\r\n            })\r\n            .catch((err) => console.log(err));\r\n    };\r\n};\r\n\r\nexport const addComment = (postId, commentId, comment, userComment) => {\r\n    const token = localStorage.getItem(\"token\");\r\n    return (dispatch) => {\r\n        return axios({\r\n            method: \"post\",\r\n            url: `${process.env.REACT_APP_API_URL}api/comment/${postId}`,\r\n            headers: {\r\n                'Authorization': `Bearer ${token}`\r\n            },\r\n            data: {\r\n                commentId, comment, userComment\r\n            }\r\n        })\r\n            .then((res) => {\r\n                dispatch({ type: ADD_COMMENT, payload: { postId } })\r\n            })\r\n            .catch((err) => console.log(err));\r\n    };\r\n};\r\n\r\nexport const editComment = (commentId, comment) => {\r\n    const token = localStorage.getItem(\"token\");\r\n    return (dispatch) => {\r\n        return axios({\r\n            method: \"put\",\r\n            url: `${process.env.REACT_APP_API_URL}api/comment/${commentId}`,\r\n            headers: {\r\n                'Authorization': `Bearer ${token}`\r\n            },\r\n            data: {\r\n                comment\r\n            }\r\n        })\r\n            .then((res) => {\r\n                // console.log(res);\r\n                dispatch({ type: EDIT_COMMENT, payload: { comment, commentId } })\r\n            })\r\n            .catch((err) => console.log(err));\r\n    };\r\n};\r\n\r\n\r\nexport const deleteComment = (commentId, postId) => {\r\n    const token = localStorage.getItem(\"token\");\r\n    return (dispatch) => {\r\n        return axios({\r\n            method: \"delete\",\r\n            url: `${process.env.REACT_APP_API_URL}api/comment/${commentId}`,\r\n            headers: {\r\n                'Authorization': `Bearer ${token}`\r\n            },\r\n            data: { commentId },\r\n        })\r\n            .then((res) => {\r\n                dispatch({ type: DELETE_COMMENT, payload: { commentId, postId } });\r\n            })\r\n            .catch((err) => console.log(err));\r\n    };\r\n};","export const isEmpty = (value) => {\r\n    return (\r\n        value === undefined ||\r\n        value === null ||\r\n        (typeof value === \"object\" && Object.keys(value).length === 0) ||\r\n        (typeof value === \"string\" && value.trim().length === 0)\r\n    );\r\n};\r\n\r\nexport const dateParser = (num) => {\r\n    let options = {\r\n        hour: \"2-digit\",\r\n        minute: \"2-digit\",\r\n        year: \"numeric\",\r\n        month: \"short\",\r\n        day: \"numeric\",\r\n    };\r\n\r\n    let timestamp = Date.parse(num);\r\n\r\n    let date = new Date(timestamp).toLocaleDateString(\"fr-FR\", options);\r\n    return date.toString();\r\n};\r\n\r\n","import React, { useState, useEffect } from 'react';\r\n// import { UidContext } from \"../AppContext\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { deleteComment, editComment } from '../../actions/post.action';\r\nimport { dateParser } from '../outils';\r\n\r\n\r\n\r\nconst EditDeleteComment = ({ comment, postId }) => {\r\n    const [isAuthor, setIsAuthor] = useState(false);\r\n    const [edit, setEdit] = useState(false);\r\n    const [text, setText] = useState(\"\");\r\n    const dispatch = useDispatch();\r\n    const userData = useSelector((state) => state.userReducer);\r\n\r\n\r\n    const handleEdit = (e) => {\r\n        e.preventDefault();\r\n        if (text) {\r\n            dispatch(editComment(comment.id, text))\r\n            setText(\" \")\r\n            setEdit(false)\r\n        }\r\n    };\r\n\r\n    const handleDelete = () => {\r\n        dispatch(deleteComment(comment.id, postId));\r\n    }\r\n\r\n    useEffect(() => {\r\n        const checkAuthor = () => {\r\n            if (userData.id === comment.userId) {\r\n                setIsAuthor(true);\r\n            }\r\n        };\r\n        checkAuthor();\r\n    }, [userData.id, comment.userId]);\r\n\r\n    return (\r\n        <div>\r\n            {isAuthor && edit === false && (\r\n                <div className=\"editDelete-comment\">\r\n                    <p className=\"date-comment\">{dateParser(comment.createdAt)}</p>\r\n                    <p onClick={() => setEdit(!edit)}>\r\n                        Modifier\r\n                    </p>\r\n                    <p onClick={handleDelete}>Supprimer</p>\r\n                </div>\r\n            )}\r\n            {isAuthor && edit && (\r\n                <form action=\"\" onSubmit={handleEdit}>\r\n                    <label htmlFor=\"text\" className=\"close-editcomment\"\r\n                        onClick={() => setEdit(!edit)}>\r\n                        &#10005;\r\n                    </label>\r\n                    <textarea\r\n                        onChange={(e) => setText(e.target.value)}\r\n                        defaultValue={comment.comment}\r\n                    />\r\n                    <br />\r\n                    <input type=\"submit\" value=\"Valider modification\" className=\"button\" />\r\n                </form>\r\n            )}\r\n        </div>\r\n\r\n    )\r\n};\r\n\r\nexport default EditDeleteComment;","import React, { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getAllPosts } from '../../actions/post.action';\r\nimport { addComment } from '../../actions/post.action';\r\nimport { isEmpty } from '../outils';\r\nimport EditDeleteComment from './EditDeleteComment';\r\n\r\nconst CardComment = ({ post }) => {\r\n    // console.log(props);\r\n    // console.log(post);\r\n    const [text, setText] = useState(\"\")\r\n    const userData = useSelector((state) => state.userReducer);\r\n    const usersData = useSelector((state) => state.usersReducer);\r\n    const dispatch = useDispatch();\r\n\r\n    const handleComment = (e) => {\r\n        e.preventDefault()\r\n        if (text) {\r\n            dispatch(addComment(post.id, userData.id, text, userData.username))\r\n                .then(() => dispatch(getAllPosts()))\r\n                .then(() => setText(''));\r\n        }\r\n    };\r\n    // console.log(post);\r\n\r\n\r\n    return (\r\n        <>\r\n            <article id=\"article-comment\" >\r\n\r\n                {post.Comments.map((comment) => {\r\n\r\n                    return (\r\n                        <div key={comment.id} className=\"container-comments\">\r\n                            <div className={comment.userId === userData.id ?\r\n                                \"containerComment-User\" : \"containerComment-client\"}\r\n                            >\r\n                                <div className=\"profileUser-comment\">\r\n                                    <div className=\"userImgName-comment\">\r\n                                        <img className=\"pictureUser-comment\" alt=\"profil\"\r\n                                            src={\r\n                                                !isEmpty(usersData[0]) &&\r\n                                                usersData.map((user) => {\r\n                                                    if (user.id === comment.userId) return user.imageUrlUser;\r\n                                                    else return null;\r\n                                                }).join('')\r\n                                            } >\r\n                                        </img>\r\n                                        <h4>{comment.User.username}</h4>\r\n                                    </div>\r\n                                </div>\r\n                                <p className=\"text-comment\">{comment.comment}</p>\r\n                            </div>\r\n                            <EditDeleteComment post={post} comment={comment} />\r\n                        </div>\r\n                    )\r\n                })}\r\n\r\n                {userData.id && (\r\n                    <form action=\"\" onSubmit={handleComment} className=\"formComment\">\r\n                        <textarea id=\"textarea-comment\" name=\"comment\"\r\n                            placeholder=\"Laisser un commentaire...\"\r\n                            onChange={(e) => setText(e.target.value)}\r\n                            value={text}\r\n                        ></textarea>\r\n                        <br />\r\n                        <input type=\"submit\" value=\"Envoyer\" className=\"button SendComment-button\" />\r\n                    </form>\r\n                )}\r\n\r\n            </article>\r\n\r\n        </>\r\n    )\r\n};\r\n\r\nexport default CardComment;","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { deletePost } from '../../actions/post.action';\r\n\r\nconst DeleteCard = (props) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const deleteQuote = (e) =>\r\n        dispatch(deletePost(props.id))\r\n\r\n    return (\r\n        <div onClick={() => {\r\n            if (window.confirm('Voulez-vous supprimer cet article?')) {\r\n                deleteQuote();\r\n            };\r\n        }}>\r\n            <i className=\"far fa-trash-alt\"></i>\r\n        </div>\r\n    );\r\n\r\n};\r\n\r\nexport default DeleteCard;","import React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { updateImgPost, updatePost } from '../../actions/post.action';\r\nimport { dateParser, isEmpty } from '../outils';\r\nimport CardComment from './CardComment';\r\nimport DeleteCard from './DeletePost';\r\n\r\n\r\n\r\nconst CardAllPosts = ({ post }) => {\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const userData = useSelector((state) => state.userReducer);\r\n    const usersData = useSelector((state) => state.usersReducer);\r\n    const [updateAllPost, setUpdateAllPost] = useState(false);\r\n    const [textUpdate, setTextUdpate] = useState(null);\r\n    const [showComment, setShowComment] = useState(false);\r\n    const [image, setImage] = useState('');\r\n    const [form, setForm] = useState(false);\r\n\r\n    // const [video, setVideo] = useState(\"\");\r\n\r\n\r\n    // const isAdmin = userData.isAdmin === true;\r\n    const dispatch = useDispatch();\r\n\r\n    const updateMessage = () => {\r\n        if (textUpdate) {\r\n            dispatch(updatePost(post.id, textUpdate))\r\n        }\r\n        setUpdateAllPost(false);\r\n    }\r\n\r\n    const handleUploadImage = () => {\r\n        if (image) {\r\n            dispatch(updateImgPost(post.id, image))\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        !isEmpty(usersData[0]) && setIsLoading(false);\r\n    }, [usersData]);\r\n\r\n\r\n    return (\r\n        <>\r\n            <article className=\"article-post\" key={post.id}>\r\n                {isLoading ? (\r\n                    <i className=\"fas fa-spinner fa-spin\"></i>\r\n                ) : (\r\n                    <>\r\n                        <div className=\"header-post\">\r\n                            <div className=\"header-post-user\">\r\n                                <img className=\"picture pictureUser-post\" alt=\"de profil\"\r\n                                    src={\r\n                                        !isEmpty(usersData[0]) &&\r\n                                        usersData.map((user) => {\r\n                                            if (user.id === post.User.id) return user.imageUrlUser;\r\n                                            else return null;\r\n                                        }).join('')\r\n                                    }\r\n                                />\r\n                                <h3>{\r\n                                    !isEmpty(usersData[0]) &&\r\n                                    usersData.map((user) => {\r\n                                        if (user.id === post.User.id)\r\n                                            return user.username;\r\n                                        else { return null; }\r\n                                    }).join('')\r\n                                }\r\n                                </h3>\r\n                            </div>\r\n                            {userData.id === post.User.id && (\r\n                                <div className=\"container-editDelete-post\">\r\n                                    {/* supprimer le post */}\r\n                                    <DeleteCard id={post.id} />\r\n                                    {/* modifier le message */}\r\n                                    <div onClick={() => setUpdateAllPost(!updateAllPost)}>\r\n                                        <i className=\"far fa-edit\"></i>\r\n                                    </div>\r\n                                    {/* modifier l'image */}\r\n                                    <form action=\"\" onSubmit={handleUploadImage}>\r\n                                        <label htmlFor=\"image\" >\r\n                                            {form === false && (\r\n                                                <div>\r\n                                                    <i className=\"far fa-images\"></i>\r\n                                                </div>\r\n                                            )}\r\n                                        </label>\r\n                                        <input type=\"file\"\r\n                                            id=\"image\"\r\n                                            name=\"image\"\r\n                                            accept=\".jpg, .jpeg, .png\"\r\n                                            className=\"input-file\"\r\n                                            onChange={(e) => setImage(e.target.files[0])}\r\n                                            onClick={() => setForm(!form)} />\r\n                                        {form && (\r\n                                            <input type=\"submit\" value=\"Envoyer\" className=\"sendUpdatePicture-user\" />\r\n                                        )}\r\n                                    </form>\r\n                                </div>\r\n                            )}\r\n\r\n                        </div>\r\n                        <div className=\"container-datePost\">\r\n                            <p>{dateParser(post.createdAt)}</p>\r\n                        </div>\r\n                        {updateAllPost === false &&\r\n                            <div>\r\n                                <h4>{post.titre}</h4>\r\n                                <p>{post.message}</p>\r\n                            </div>}\r\n                        {post.imageUrlPost && (\r\n                            <img className=\"img-post\" src={post.imageUrlPost} alt=\"de la publication\" />\r\n                        )}\r\n\r\n                        <p className=\"video\">\r\n                            {post.video && (\r\n                                <iframe\r\n                                    width=\"500\"\r\n                                    height=\"300\"\r\n                                    src={post.video}\r\n                                    frameBorder=\"0\"\r\n                                    allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n                                    allowFullScreen\r\n                                    title={post.id}\r\n                                    ng-show=\"showvideo\"\r\n                                ></iframe>\r\n\r\n                            )}\r\n                        </p>\r\n                    </>\r\n                )\r\n                }\r\n                <p className=\"block-comments\">\r\n                    <i className=\"far fa-comment\"\r\n                        onClick={() => setShowComment(!showComment)}>\r\n                        {post.Comments.length}\r\n                    </i>\r\n                </p>\r\n                {showComment && <CardComment post={post} />}\r\n            </article>\r\n            {updateAllPost && (\r\n                <article className=\"article-popup  style-popup\">\r\n                    <div className=\"container-popup\">\r\n                        <span className=\"close-popup\"\r\n                            onClick={() => setUpdateAllPost(false)}>\r\n                            &#10005;\r\n                        </span>\r\n                        {/* {post.imageUrlPost &&\r\n                            <div className=\"header-popup\">\r\n                                <img className=\"img-post\" src={post.imageUrlPost} alt=\"de la publication\" />\r\n                            </div>} */}\r\n                        {/* <p onClick={() => post.imageUrlPost === (\"\")}>supprimer</p> */}\r\n                        <div className=\"textPopup\">\r\n                            <textarea defaultValue={post.message}\r\n                                onChange={(e) => setTextUdpate(e.target.value)}\r\n                            ></textarea>\r\n                            <p className=\"video\">\r\n                                {post.video && (\r\n                                    <iframe\r\n                                        width=\"500\"\r\n                                        height=\"300\"\r\n                                        src={post.video}\r\n                                        frameBorder=\"0\"\r\n                                        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n                                        allowFullScreen\r\n                                        title={post.id}\r\n                                        ng-show=\"showvideo\"\r\n                                    ></iframe>\r\n                                )}\r\n                            </p>\r\n                            {/* <form action=\"\" className=\"form-updatePicture\" onSubmit={handleUploadImage}>\r\n                                <input type=\"submit\" value=\"Envoyer\" className=\"sendUpdatePicture-user\" />\r\n                                <input type=\"file\" id=\"image\" name=\"image\" accept=\".jpg, .jpeg, .png\"\r\n                                    onChange={(e) => setImage(e.target.files[0])}\r\n                                />\r\n                            </form> */}\r\n                            <button className=\"button green-button\"\r\n                                onClick={updateMessage}>\r\n                                Valider modification\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </article>\r\n            )}\r\n        </>\r\n    )\r\n};\r\n\r\nexport default CardAllPosts;","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getAllPosts } from '../../actions/post.action';\r\nimport { isEmpty } from '../outils'\r\nimport CardAllPosts from './CardAllPosts';\r\n\r\nconst AllPosts = () => {\r\n    const [count, setCount] = useState(5);\r\n    const [loadPost, setLoadPost] = useState(true);\r\n    const dispatch = useDispatch();\r\n    const AllPosts = useSelector((state) => state.postReducer);\r\n\r\n    const loadMore = () => {\r\n        if (window.innerHeight + document.documentElement.scrollTop + 1 > document.scrollingElement.scrollHeight) {\r\n            setLoadPost(true);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (loadPost) {\r\n            dispatch(getAllPosts(count));\r\n            setLoadPost(false)\r\n            setCount(count + 5);\r\n        }\r\n        window.addEventListener('scroll', loadMore);\r\n        return () => window.removeEventListener('scroll', loadMore)\r\n    }, [loadPost, dispatch, count]);\r\n\r\n\r\n    return (\r\n        <section id=\"section-post\">\r\n            <div className=\"section-title-post\">\r\n                <img className=\"img-title-post\" src=\"logo/icon.png\" alt=\"logo d'entreprise\" />\r\n                <h2>Fil d'actualité</h2>\r\n            </div>\r\n            {!isEmpty(AllPosts[0]) &&\r\n                AllPosts.map((post) => {\r\n                    return <CardAllPosts post={post} key={post.id} />\r\n                })\r\n            }\r\n        </section>\r\n    )\r\n};\r\nexport default AllPosts;\r\n","import React, { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { isEmpty } from '../outils';\r\nimport { addPost, getAllPosts } from \"../../actions/post.action\";\r\n\r\n\r\nconst NewPostForm = () => {\r\n    const [message, setMessage] = useState(\"\");\r\n    const [postImg, setPostImg] = useState(null);\r\n    const [image, setImage] = useState();\r\n    const [video, setVideo] = useState(\"\");\r\n    const [newPost, setNewPost] = useState(false)\r\n    const userData = useSelector((state) => state.userReducer);\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    const handleVideo = () => {\r\n        let findLink = message.split(\" \");\r\n        for (let i = 0; i < findLink.length; i++) {\r\n            if (findLink[i].includes('https://')) {\r\n                let embed = findLink[i].replace('watch?v=', \"embed/\");\r\n                setVideo(embed.split('&')[0]);\r\n                findLink.splice(i, 1);\r\n                setMessage(findLink.join(\" \"));\r\n                setPostImg('');\r\n            }\r\n        }\r\n    }\r\n    handleVideo();\r\n\r\n    const handlePicture = (e) => {\r\n        setPostImg(URL.createObjectURL(e.target.files[0]));\r\n        setImage(e.target.files[0]);\r\n        setVideo('');\r\n    }\r\n\r\n    const handleNewPost = async () => {\r\n        if (message || postImg || video) {\r\n            const data = new FormData();\r\n            data.append('userId', userData.id);\r\n            data.append('message', message);\r\n            if (image) data.append(\"image\", image);\r\n            data.append('video', video)\r\n\r\n            await (dispatch(addPost(data)));\r\n            dispatch(getAllPosts());\r\n            cancelPost();\r\n            setNewPost(false);\r\n\r\n        } else {\r\n            alert(\"Veuillez entrer un message\")\r\n        }\r\n\r\n    };\r\n\r\n\r\n    const cancelPost = () => {\r\n        setMessage('');\r\n        setPostImg('');\r\n        setVideo('');\r\n        setImage('');\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <section className=\"section-newPost\">\r\n                <article className=\"article-newPost\">\r\n                    <NavLink exact to=\"/profil\">\r\n                        <img className=\"picture picture-newPost\" alt=\"utilisateur_img\"\r\n                            src={userData.imageUrlUser}\r\n                        />\r\n                    </NavLink>\r\n                    <input name='message'\r\n                        placeholder='Nouvelle publication ...'\r\n                        onClick={() => setNewPost(!newPost)}\r\n                    ></input>\r\n                </article>\r\n            </section>\r\n\r\n            {newPost && (\r\n                <section>\r\n                    <article className=\"article-popup style-popup article-newPost-popup\">\r\n                        <div className=\"container-popup\">\r\n                            <span className=\"close-popup\"\r\n                                onClick={() => setNewPost(false)}>\r\n                                &#10005;\r\n                            </span>\r\n                            <div className=\"header-popup header-popup-newPost\">\r\n                                <img alt=\"utilisateur img\" className=\"picture picture-newPost\"\r\n                                    src={userData.imageUrlUser}\r\n                                />\r\n                                <h3>{userData.username}</h3>\r\n                            </div>\r\n                            <div className=\"textPopup\">\r\n                                <textarea\r\n                                    value={message}\r\n                                    onChange={(e) => setMessage(e.target.value)}\r\n                                ></textarea>\r\n                                {postImg && (\r\n                                    <img className=\"img-newPost-popup\" src={postImg} alt=\"post img\" />\r\n                                )}\r\n                                <div id=\"containerVideo-Newpost\">\r\n                                    {video && (\r\n                                        <div id=\"closeVideo-nexPost\">\r\n                                            <span\r\n                                                onClick={() => setVideo(\"\")}>\r\n                                                &#10005;\r\n                                            </span>\r\n                                        </div>\r\n                                    )}\r\n                                    {video && (\r\n                                        <iframe\r\n                                            className=\"video-newPost\"\r\n                                            src={video}\r\n                                            frameBorder=\"0\"\r\n                                            allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n                                            allowFullScreen\r\n                                            // ng-show=\"showvideo\"\r\n                                            title={video}\r\n                                        ></iframe>\r\n                                    )}\r\n                                </div>\r\n                                <div className=\"container-newPostPopup-img-btn\">\r\n                                    {isEmpty(video) && (\r\n                                        <div className=\"newPostPopup-img\">\r\n                                            <i className=\"far fa-image\"></i>\r\n                                            <input type=\"file\" id=\"file-upload\" name=\"image\" accept=\".jpg, .jpeg, .png\" onChange={(e) => handlePicture(e)} />\r\n                                        </div>\r\n                                    )}\r\n                                    <div className=\"container-newPostBtnSendCancel\">\r\n                                        {message || postImg || video.length > 20 ? (\r\n                                            <button className=\"button btnNewPost red-button\"\r\n                                                onClick={cancelPost}>\r\n                                                Annuler\r\n                                            </button>\r\n                                        ) : null}\r\n                                        <button className=\"  button btnNewPost green-button\"\r\n                                            onClick={handleNewPost}>\r\n                                            Publier\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </article>\r\n                </section>\r\n            )\r\n            }\r\n        </>\r\n    )\r\n};\r\n\r\nexport default NewPostForm;","import React from 'react';\r\nimport AllPosts from '../components/Post/AllPosts';\r\nimport NewPostForm from '../components/Post/NewPostForm';\r\n\r\nconst Post = () => {\r\n    return (\r\n        <main id=\"main-section\">\r\n            <NewPostForm />\r\n            <AllPosts />\r\n        </main>\r\n    )\r\n};\r\n\r\nexport default Post;\r\n","import axios from \"axios\";\r\n\r\n\r\n\r\n\r\nexport const GET_USER = \"GET_USER\";\r\n// export const UPLOAD_PICTURE = \"UPLOAD_PICTURE\"\r\nexport const UPDATE_PROFIL = \"UPDATE_PROFIL\";\r\nexport const UPDATE_IMG = \"UPDATE_IMG\";\r\nexport const DELETE_ACCOUNT = \"DELETE_ACCOUNT\";\r\n\r\n\r\nexport const getUser = (uid) => {\r\n    return (dispatch) => {\r\n        return axios\r\n            .get(`${process.env.REACT_APP_API_URL}api/auth/${uid}`)\r\n            .then((res) => {\r\n                // console.log(uid);\r\n                // console.log(res);\r\n                // for (let element of res.data.userId) {\r\n\r\n                dispatch({ type: GET_USER, payload: res.data.userId })\r\n                // }\r\n            })\r\n            .catch((err) => console.log(err));\r\n    };\r\n};\r\n\r\nexport const updateProfil = (uid, description) => {\r\n    return (dispatch) => {\r\n        // let data = new FormData();\r\n        // data.append('description', description);\r\n        return axios({\r\n            method: \"put\",\r\n            url: `${process.env.REACT_APP_API_URL}api/auth/${uid}`,\r\n            data: { description }\r\n        })\r\n            .then((res) => {\r\n                dispatch({ type: UPDATE_PROFIL, payload: description });\r\n\r\n            })\r\n            .catch((err) => console.log(err));\r\n    };\r\n};\r\n\r\n\r\nexport const updateImg = (uid, image) => {\r\n    return (dispatch) => {\r\n        let data = new FormData();\r\n        data.append('image', image);\r\n\r\n        return axios({\r\n            method: \"put\",\r\n            url: `${process.env.REACT_APP_API_URL}api/auth/${uid}/image`,\r\n            data: data\r\n        })\r\n            .then((res) => {\r\n                dispatch({ type: UPDATE_IMG, payload: data });\r\n\r\n            })\r\n            .catch((err) => console.log(err));\r\n    };\r\n};\r\n\r\nexport const deleteAccount = (uid) => {\r\n    const token = localStorage.getItem(\"token\")\r\n    return (dispatch) => {\r\n        return axios({\r\n            method: \"delete\",\r\n            url: `${process.env.REACT_APP_API_URL}api/auth/${uid}`,\r\n            headers: {\r\n                'Authorization': `Bearer ${token}`\r\n            }\r\n        })\r\n            .then((res) => {\r\n                dispatch({ type: DELETE_ACCOUNT, payload: uid });\r\n\r\n            })\r\n            .catch((err) => console.log(err));\r\n    };\r\n};\r\n\r\n\r\n","import React, { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { updateImg } from '../../actions/user.action';\r\n\r\nconst UpdateImg = () => {\r\n    const userData = useSelector((state) => state.userReducer);\r\n    const [image, setImage] = useState('');\r\n    const [form, setForm] = useState(false);\r\n    const dispatch = useDispatch();\r\n\r\n    const handleUploadImage = () => {\r\n        dispatch(updateImg(userData.id, image))\r\n    };\r\n\r\n    return (\r\n        <form action=\"\" className=\"form-updatePicture\" onSubmit={handleUploadImage}>\r\n            <div className=\"container-userProfile-picture\">\r\n                <div className=\"container-account-picture\">\r\n                    <img className=\"picture account-picture\" src={userData.imageUrlUser} alt=\"utilisateur img\" />\r\n                </div>\r\n                <h1> {userData.username}</h1>\r\n                <label htmlFor=\"image\">\r\n                    {form === false && (\r\n                        <div className=\"buttonChoice-picture\">\r\n                            <i className=\"fas fa-camera\"></i>\r\n                        </div>\r\n                    )}\r\n                </label>\r\n                <input type=\"file\"\r\n                    id=\"image\"\r\n                    name=\"image\"\r\n                    accept=\".jpg, .jpeg, .png\"\r\n                    className=\"input-file\"\r\n                    onChange={(e) => setImage(e.target.files[0])}\r\n                    onClick={() => setForm(!form)} />\r\n            </div>\r\n            {form && (\r\n                <input type=\"submit\" value=\"Envoyer\" className=\"sendUpdatePicture-user\" />\r\n            )}\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default UpdateImg;","import React, { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { deleteAccount, updateProfil } from '../../actions/user.action';\r\nimport UpdateImg from './UpdateImg';\r\n\r\nconst ProfileUser = () => {\r\n    const userData = useSelector((state) => state.userReducer);\r\n    const [description, setDescription] = useState('');\r\n    const [confirmDelete, setConfirmDelete] = useState(false);\r\n    const [form, setForm] = useState(false);\r\n    const dispatch = useDispatch();\r\n\r\n    const handleUpdateDescription = () => {\r\n        dispatch(updateProfil(userData.id, description));\r\n        setForm(false);\r\n    }\r\n\r\n    const handleDeleteAccount = () => {\r\n        localStorage.clear();\r\n        window.location.href = '/';\r\n        dispatch(deleteAccount(userData.id));\r\n    }\r\n\r\n    return (\r\n        <section>\r\n            <article id=\"article-account-name-img\"> <UpdateImg />\r\n                <div className=\"container-account-description\">\r\n                    {form === false && (\r\n                        <div className=\"account-description\">\r\n                            <label htmlFor=\"description\"></label>\r\n                            <p onClick={() => setForm(!form)}>{userData.description} </p>\r\n                        </div>\r\n                    )}\r\n                    {form && (\r\n                        <>\r\n                            <textarea name=\"description\" id=\"description\" placeholder=\"Description...\"\r\n                                defaultValue={userData.description}\r\n                                onChange={(e) => setDescription(e.target.value)} >\r\n                            </textarea>\r\n                            <button className=\"button green-button buttonSend-description\" onClick={handleUpdateDescription}>\r\n                                Valider modifications\r\n                            </button>\r\n                        </>\r\n                    )}\r\n                    <p onClick={() => setConfirmDelete(!confirmDelete)}>Supprimer votre compte</p>\r\n                </div>\r\n            </article>\r\n            {confirmDelete &&\r\n                <article className=\"article-popup  style-popup\">\r\n                    <div className=\"container-popup\">\r\n                        <span className=\"close-popup\"\r\n                            onClick={() => setConfirmDelete(false)}>\r\n                            &#10005;\r\n                        </span>\r\n                        <h3>Confimer la suppression de votre compte</h3>\r\n                        <div>\r\n                            <button className=\"button \"\r\n                                onClick={handleDeleteAccount}>\r\n                                Confimer\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </article>\r\n            }\r\n        </section >\r\n    )\r\n};\r\n\r\nexport default ProfileUser;","import React from 'react';\r\nimport ProfileUser from '../components/Profile/ProfileUser'\r\n\r\nconst Profile = () => {\r\n    return (\r\n        <>\r\n            <ProfileUser />\r\n        </>\r\n    )\r\n};\r\n\r\nexport default Profile;\r\n","import React from 'react';\r\n// import { NavLink } from 'react-router-dom';\r\n\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n            <p>Groupomania</p>\r\n        </footer>\r\n    )\r\n};\r\n\r\nexport default Footer;","import React from 'react';\r\n\r\nconst Logout = () => {\r\n\r\n    const Logout = () => {\r\n        localStorage.removeItem(\"token\");\r\n        localStorage.removeItem(\"id\");\r\n        window.location = \"/\";\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <li onClick={Logout}>\r\n                <i className=\"fas fa-power-off\"></i>\r\n            </li>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default Logout;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Logout from './Log/Logout';\r\n\r\nconst Navbar = () => {\r\n    const token = localStorage.getItem(\"token\");\r\n    return (\r\n        <header>\r\n            <NavLink exact to='/post'>\r\n                <div className=\"header-container-img\">\r\n                    <img src=\"logo/icon-left-font-monochrome-white.png\"\r\n                        alt=\"logo de l'entreprise groupomania\"\r\n                        className=\"header-img-groupomania\" />\r\n                </div>\r\n            </NavLink>\r\n            {token ? (\r\n                <nav>\r\n                    <ul>\r\n                        <li>\r\n                            <NavLink exact to='/post'><i className=\"fas fa-home\"></i></NavLink>\r\n                        </li>\r\n                        <li>\r\n                            <NavLink exact to='/profil'><i className=\"fas fa-user\"></i></NavLink>\r\n                        </li>\r\n                        <li>\r\n                            <i className=\"fas fa-bell\"></i>\r\n                        </li>\r\n                        <li>\r\n                            <i className=\"fas fa-users\"></i>\r\n                        </li>\r\n                        <Logout />\r\n                    </ul>\r\n                </nav>\r\n            ) : (\r\n                <NavLink exact to='/'></NavLink>\r\n            )}\r\n        </header>\r\n    )\r\n};\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Redirect, Route, Switch } from 'react-router-dom'\r\nimport Home from '../../Pages/Home';\r\nimport Post from '../../Pages/Post';\r\nimport Profile from '../../Pages/Profile';\r\nimport Footer from '../Footer';\r\nimport Navbar from '../Navbar';\r\n\r\n\r\nconst index = () => {\r\n    return (\r\n        <Router>\r\n            <Navbar />\r\n            <Switch>\r\n                <Route path=\"/\" exact component={Home} />\r\n                <Route path=\"/profil\" exact component={Profile} />\r\n                <Route path=\"/post\" exact component={Post} />\r\n                <Redirect to=\"/\" />\r\n            </Switch>\r\n            <Footer />\r\n        </Router>\r\n    );\r\n};\r\n\r\nexport default index;\r\n","import { createContext } from 'react';\r\n\r\nexport const UidContext = createContext();\r\n","import React, { useEffect, useState } from \"react\";\nimport Routes from \"./components/Routes\";\nimport { UidContext } from \"./components/AppContext\";\nimport axios from \"axios\";\nimport { useDispatch } from \"react-redux\";\nimport { getUser } from \"./actions/user.action\";\n\nconst App = () => {\n  const [uid, setUid] = useState(null);\n  const dispatch = useDispatch();\n  const token = localStorage.getItem(\"token\");\n  const id = localStorage.getItem(\"id\");\n\n  useEffect(() => {\n    const fetchToken = async () => {\n      await axios({\n        method: \"get\",\n        url: `${process.env.REACT_APP_API_URL}api/auth/${id}`,\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      })\n        .then((res) => {\n          setUid(id);\n        }\n\n        )\n        .catch((err) => console.log(\"No token\"));\n    };\n    fetchToken();\n\n    if (uid) dispatch(getUser(uid));\n  }, [token, id, uid, dispatch]);\n\n  return (\n    <UidContext.Provider value={uid}>\n      <Routes />\n    </UidContext.Provider>\n  );\n};\n\nexport default App;","import { GET_USER, UPDATE_PROFIL, UPDATE_IMG, DELETE_ACCOUNT } from \"../actions/user.action\";\r\n\r\nconst initialState = {};\r\nexport default function userReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case GET_USER:\r\n            return action.payload;\r\n        case UPDATE_PROFIL:\r\n            return {\r\n                ...state,\r\n                description: action.payload,\r\n            };\r\n        case UPDATE_IMG:\r\n            return {\r\n                ...state,\r\n                data: action.payload,\r\n            };\r\n        case DELETE_ACCOUNT:\r\n            return state.filter((user) => user.id !== action.payload.uid);\r\n        default:\r\n            return state\r\n    }\r\n};","import { DELETE_POST, GET_ALL_POSTS, UPDATE_POST, EDIT_COMMENT, DELETE_COMMENT, UPDATE_IMG_POST } from \"../actions/post.action\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function postReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case GET_ALL_POSTS:\r\n            return action.payload;\r\n        case UPDATE_POST:\r\n            return state.map((post) => {\r\n                if (post.id === action.payload.postId) {\r\n                    return {\r\n                        ...post,\r\n                        message: action.payload.message,\r\n                    };\r\n                } else return post;\r\n            });\r\n        case UPDATE_IMG_POST:\r\n            return state.map((post) => {\r\n                if (post.id === action.payload.postId) {\r\n                    return {\r\n                        ...post,\r\n                        image: action.payload.image,\r\n                    };\r\n                } else return post;\r\n            });\r\n        case DELETE_POST:\r\n            return state.filter((post) => post.id !== action.payload.postId);\r\n        case EDIT_COMMENT:\r\n            return state.map((post) => {\r\n                if (post.id === action.payload.postId) {\r\n                    return {\r\n                        ...post,\r\n                        Comments: post.Comments.map((comment) => {\r\n                            if (comment.id === action.payload.commentId) {\r\n                                return {\r\n                                    ...comment,\r\n                                    comment: action.payload.comment,\r\n                                };\r\n                            } else {\r\n                                return comment;\r\n                            }\r\n                        }),\r\n                    };\r\n                } else return post\r\n            });\r\n        case DELETE_COMMENT:\r\n            return state.map((post) => {\r\n                if (post.id === action.payload.postId) {\r\n                    return {\r\n                        ...post,\r\n                        comments: post.Comments.filter(\r\n                            (comment) => comment.id !== action.payload.commentId\r\n                        ),\r\n                    };\r\n                } else return post;\r\n            });\r\n\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","\r\nimport axios from \"axios\";\r\n\r\nexport const GET_USERS = \"GET_USERS\";\r\n\r\nexport const getUsers = () => {\r\n    return (dispatch) => {\r\n        return axios\r\n            .get(`${process.env.REACT_APP_API_URL}api/auth/`)\r\n            .then((res) => {\r\n                // console.log(res.data);\r\n                dispatch({ type: GET_USERS, payload: res.data.users });\r\n            })\r\n            .catch((err) => console.log(err));\r\n    };\r\n};","import { GET_USERS } from \"../actions/users.action\"\r\n\r\nconst initialState = {};\r\n\r\nexport default function usersReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case GET_USERS:\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n};","import { combineReducers } from \"redux\";\r\nimport userReducer from \"./user.reducer\";\r\nimport postReducer from \"./post.reducer\";\r\nimport usersReducer from \"./users.reducer\";\r\n\r\n\r\n\r\nexport default combineReducers({\r\n    userReducer,\r\n    usersReducer,\r\n    postReducer,\r\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport \"./css/style.css\"\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { applyMiddleware, createStore } from 'redux';\nimport rootReducer from './reducers'\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport logger from 'redux-logger';\nimport { getUsers } from './actions/users.action';\n\nconst rootNode = document.getElementById('root');\nconst store = createStore(\n  rootReducer, composeWithDevTools(applyMiddleware(thunk, logger))\n)\nstore.dispatch(getUsers())\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  rootNode\n\n);\n\n"],"sourceRoot":""}